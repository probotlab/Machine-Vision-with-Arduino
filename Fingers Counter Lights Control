import cv2
import time
import HandTrackingModule as htm
import pyfirmata

comport = 'COM7'
board = pyfirmata.Arduino(comport)
led_1 = board.get_pin('d:10:o')
led_2 = board.get_pin('d:9:o')
led_3 = board.get_pin('d:11:o')

wCam, hCam = 1280, 720
cap = cv2.VideoCapture(0)
cap.set(3, wCam)
cap.set(4, hCam)
pTime = 0
detector = htm.handDetector(detectionCon=0.75)
tipIds = [4, 8, 12, 16, 20]
while True:
    success, img = cap.read()
    img = detector.findHands(img)
    lmList = detector.findPosition(img, draw=False)
    # print(lmList)
    if len(lmList) != 0:
        fingers = []
        # Thumb
        if lmList[tipIds[0]][1] < lmList[tipIds[0] - 1][1]:
            fingers.append(1)
        else:
            fingers.append(0)
        # 4 Fingers
        for id in range(1, 5):
            if lmList[tipIds[id]][2] < lmList[tipIds[id] - 2][2]:
                fingers.append(1)
            else:
                fingers.append(0)
        # print(fingers)
        totalFingers = fingers.count(1)
        print(totalFingers)

        if totalFingers == 0:
            led_1.write(0)
            led_2.write(0)
            led_3.write(0)

        elif totalFingers == 1:
            led_1.write(1)
            led_2.write(0)
            led_3.write(0)

        elif totalFingers == 2:
            led_1.write(0)
            led_2.write(1)
            led_3.write(0)

        elif totalFingers == 3:
            led_1.write(0)
            led_2.write(0)
            led_3.write(1)

        elif totalFingers == 4:
            led_1.write(1)
            led_2.write(1)
            led_3.write(0)

        elif totalFingers == 5:
            led_1.write(1)
            led_2.write(1)
            led_3.write(1)

        cv2.putText(img, str(totalFingers), (45, 375), cv2.FONT_HERSHEY_PLAIN,
                    10, (255, 0, 0), 5)
    cTime = time.time()
    fps = 1 / (cTime - pTime)
    pTime = cTime
    cv2.putText(img, f'FPS: {int(fps)}', (70, 70), cv2.FONT_HERSHEY_PLAIN,
                3, (255, 0, 0), 3)
    cv2.imshow("Image", img)
    k = cv2.waitKey(1)
    if k == ord('q'):
        break
video.release()
cv2.destroyAllWindows()
